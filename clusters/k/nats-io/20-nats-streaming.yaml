---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nats-streaming-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nats-streaming-operator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nats-streaming-operator
subjects:
- kind: ServiceAccount
  name: nats-streaming-operator
  namespace: nats-io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nats-streaming-operator
rules:
# Allow creating CRDs
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]

# Allow all actions on NatsClusters
- apiGroups:
  - nats.io
  resources:
  - natsclusters
  - natsserviceroles
  verbs: ["*"]

# Allow all actions on NatsStreamingClusters
- apiGroups:
  - streaming.nats.io
  resources:
  - natsstreamingclusters
  - natsstreamingclusters/finalizers
  verbs: ["*"]

# Allow actions on basic Kubernetes objects
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  - pods
  - services
  - serviceaccounts
  - serviceaccounts/token
  - endpoints
  - events
  verbs: ["*"]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: natsstreamingclusters.streaming.nats.io
spec:
  group: streaming.nats.io
  names:
    kind: NatsStreamingCluster
    listKind: NatsStreamingClusterList
    plural: natsstreamingclusters
    singular: natsstreamingcluster
    shortNames: ["stanclusters", "stancluster"]
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-streaming-operator
  namespace: nats-io
spec:
  replicas: 1
  selector:
    matchLabels:
      name: nats-streaming-operator
  template:
    metadata:
      labels:
        name: nats-streaming-operator
    spec:
      serviceAccountName: nats-streaming-operator
      containers:
      - name: nats-streaming-operator
        image: synadia/nats-streaming-operator:0.4.2
        imagePullPolicy: Always
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
