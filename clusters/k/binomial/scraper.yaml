apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: web-scraper
    app.kubernetes.io/name: food-scraper
    app.kubernetes.io/part-of: food
  name: food-scraper
  namespace: binomial
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    targetPort: 8000
  - name: rclone
    port: 5572
  selector:
    app.kubernetes.io/component: web-scraper
    app.kubernetes.io/name: food-scraper
    app.kubernetes.io/part-of: food
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: food-scraper
  namespace: binomial
  labels:
    app.kubernetes.io/component: web-scraper
    app.kubernetes.io/name: food-scraper
    app.kubernetes.io/part-of: food
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: web-scraper
      app.kubernetes.io/name: food-scraper
      app.kubernetes.io/part-of: food
  serviceName: food-scraper
  template:
    metadata:
      labels:
        app.kubernetes.io/component: web-scraper
        app.kubernetes.io/name: food-scraper
        app.kubernetes.io/part-of: food
    spec:
      # We need an init container to copy the configuration file
      # because rclone requires that the file be writable.
      initContainers:
      - name: config
        image: alpine
        command:
          - cp
        args:
          - -v
          - /in/rclone.conf
          - /out/rclone.conf
        volumeMounts:
        - name: config-in
          mountPath: /in
        - name: config-out
          mountPath: /out
      containers:
      - name: rclone
        image: rclone/rclone
        args:
          - mount
          - 'storage:'
          - /data
          - --config=/etc/rclone/rclone.conf
          - --allow-non-empty
          - --allow-other
          - --rc
          - --rc-addr=0.0.0.0:5572
          - --rc-enable-metrics
          - --vfs-cache-mode=full
          - --no-modtime
          - --transfers=10
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "fusermount -uz /data"]
        ports:
        - containerPort: 5572
          protocol: TCP
        securityContext:
          # The container has to be privileged in order
          # to use a Bidirectional mount.
          privileged: true
        resources:
          limits:
            squat.ai/fuse: 1
        volumeMounts:
        - name: config-out
          mountPath: /etc/rclone
        - name: data
          mountPath: /data
          mountPropagation: Bidirectional
      - name: food
        image: binomiallabs/food
        command:
        - /bin/sh
        - -c
        - 'until [ -d /data/food ]; do echo "waiting for bucket to be mounted..." && sleep 1; done && /home/binomial/.local/bin/food --log-level=info scrape --url=nats://food.binomial.svc.cluster.local:4222 --raw-dir=/data/food/raw --clean-dir=/data/food/clean'
        ports:
        - containerPort: 8000
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: config-out
        emptyDir: {}
      - name: config-in
        secret:
          secretName: rclone
      - name: data
        emptyDir: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: web-scraper
    app.kubernetes.io/name: food-scraper
    app.kubernetes.io/part-of: food
  name: food-scraper
  namespace: binomial
spec:
  endpoints:
  - interval: 15s
    port: http
  - interval: 15s
    port: rclone
    path: /metrics
  selector:
    matchLabels:
      app.kubernetes.io/component: web-scraper
      app.kubernetes.io/name: food-scraper
      app.kubernetes.io/part-of: food
